name: Package

on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  package:
    name: Package
    runs-on: ubuntu-24.04
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          submodules: recursive
          lfs: true

      - name: Install dependencies
        run: |
          sudo apt install ninja-build wget

      - name: Install GCC
        run: |
          wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz
          tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz
          ls -la .
          ls -la arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi
          export PATH="$PATH:$GITHUB_WORKSPACE/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/bin"
          arm-none-eabi-g++ --version

      - name: Build firmware
        run: |
          export PATH="$PATH:$GITHUB_WORKSPACE/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/bin"
          cmake --workflow --preset arm-gcc

      - name: Make firmware archive
        run: |
          mkdir firmware
          cp cmake-build-arm-gcc/src/ares/Release/ares.bin firmware
          cp cmake-build-arm-gcc/src/astra/Release/astra.bin firmware
          cp cmake-build-arm-gcc/src/hermas/Release/hermas.bin firmware
          cp cmake-build-arm-gcc/src/kyma/Release/kyma.bin firmware
          cp cmake-build-arm-gcc/src/poseidon/Release/poseidon.bin firmware

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: firmware
          if-no-files-found: error

  release:
    name: Release
    needs: package
    runs-on: ubuntu-24.04
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          lfs: true

      - name: Get Artifacts
        uses: actions/download-artifact@v5

      - name: Show artifacts
        run: ls -la

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            ./LICENSE.txt
            ./firmware/**
